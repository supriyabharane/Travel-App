{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { cookies } from 'next/headers';\r\n\r\nexport function middleware(request) {\r\n  const token = request.cookies.get('token');\r\n  const { pathname } = request.nextUrl;\r\n\r\n  // Protected routes that require authentication\r\n  const protectedPaths = ['/user-profile'];\r\n  \r\n  // Public routes that should not be accessible when logged in\r\n  const authPaths = ['/login', '/signup'];\r\n\r\n  // Check if the path is protected and user is not authenticated\r\n  if (protectedPaths.includes(pathname) && !token) {\r\n    return NextResponse.redirect(new URL('/login', request.url));\r\n  }\r\n\r\n  // Redirect authenticated users away from auth pages\r\n  if (authPaths.includes(pathname) && token) {\r\n    return NextResponse.redirect(new URL('/', request.url));\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    '/user-profile/:path*',\r\n    '/login',\r\n    '/signup',\r\n  ],\r\n};"],"names":[],"mappings":";;;;AAAA;AACA;AADA;;;AAGO,SAAS,WAAW,OAAO;IAChC,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC;IAClC,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,+CAA+C;IAC/C,MAAM,iBAAiB;QAAC;KAAgB;IAExC,6DAA6D;IAC7D,MAAM,YAAY;QAAC;QAAU;KAAU;IAEvC,+DAA+D;IAC/D,IAAI,eAAe,QAAQ,CAAC,aAAa,CAAC,OAAO;QAC/C,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,oDAAoD;IACpD,IAAI,UAAU,QAAQ,CAAC,aAAa,OAAO;QACzC,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACvD;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;KACD;AACH"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}