{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/OneDrive/Documents/Travel-App/lib/db.js"],"sourcesContent":["// import mongoose from 'mongoose';\r\n\r\n// const MONGODB_URI = process.env.MONGODB_URI;\r\n\r\n// if (!MONGODB_URI) {\r\n//   throw new Error('Please define the MONGODB_URI environment variable inside .env');\r\n// }\r\n\r\n// let cached = global.mongoose;\r\n\r\n// if (!cached) {\r\n//   cached = global.mongoose = { conn: null, promise: null };\r\n// }\r\n\r\n// async function connectDB() {\r\n//   try {\r\n//     if (cached.conn) {\r\n//       console.log('Using cached MongoDB connection');\r\n//       return cached.conn;\r\n//     }\r\n\r\n//     console.log('Creating new MongoDB connection...');\r\n    \r\n//     if (!cached.promise) {\r\n//       const opts = {\r\n//         bufferCommands: false,\r\n//       };\r\n\r\n//       cached.promise = mongoose.connect(MONGODB_URI, opts);\r\n//     }\r\n    \r\n//     cached.conn = await cached.promise;\r\n//     console.log('Successfully connected to MongoDB!');\r\n//     return cached.conn;\r\n//   } catch (error) {\r\n//     console.error('MongoDB connection error:', error);\r\n//     throw error;\r\n//   }\r\n// }\r\n\r\n// export default connectDB;\r\n\r\n\r\n\r\n\r\n\r\nconst mongoose = require(\"mongoose\");\r\nrequire(\"dotenv\").config();\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"Please define the MONGODB_URI environment variable inside .env\");\r\n}\r\n\r\nlet cached = global.mongoose;\r\n\r\nif (!cached) {\r\n  cached = global.mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function connectDB() {\r\n  try {\r\n    if (cached.conn) {\r\n      console.log(\"Using cached MongoDB connection\");\r\n      return cached.conn;\r\n    }\r\n\r\n    console.log(\"Creating new MongoDB connection...\");\r\n\r\n    if (!cached.promise) {\r\n      const opts = {\r\n        bufferCommands: false,\r\n        family: 4, // Forces IPv4 to avoid DNS issues\r\n      };\r\n\r\n      cached.promise = mongoose.connect(MONGODB_URI, opts);\r\n    }\r\n\r\n    cached.conn = await cached.promise;\r\n    console.log(\"✅ Successfully connected to MongoDB Atlas\");\r\n    return cached.conn;\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB Atlas connection error:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default connectDB;\r\n"],"names":[],"mappings":"AAAA,mCAAmC;AAEnC,+CAA+C;AAE/C,sBAAsB;AACtB,uFAAuF;AACvF,IAAI;AAEJ,gCAAgC;AAEhC,iBAAiB;AACjB,8DAA8D;AAC9D,IAAI;AAEJ,+BAA+B;AAC/B,UAAU;AACV,yBAAyB;AACzB,wDAAwD;AACxD,4BAA4B;AAC5B,QAAQ;AAER,yDAAyD;AAEzD,6BAA6B;AAC7B,uBAAuB;AACvB,iCAAiC;AACjC,WAAW;AAEX,8DAA8D;AAC9D,QAAQ;AAER,0CAA0C;AAC1C,yDAAyD;AACzD,0BAA0B;AAC1B,sBAAsB;AACtB,yDAAyD;AACzD,mBAAmB;AACnB,MAAM;AACN,IAAI;AAEJ,4BAA4B;;;;AAM5B,MAAM;AACN,4FAAkB,MAAM;AAExB,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI;QACF,IAAI,OAAO,IAAI,EAAE;YACf,QAAQ,GAAG,CAAC;YACZ,OAAO,OAAO,IAAI;QACpB;QAEA,QAAQ,GAAG,CAAC;QAEZ,IAAI,CAAC,OAAO,OAAO,EAAE;YACnB,MAAM,OAAO;gBACX,gBAAgB;gBAChB,QAAQ;YACV;YAEA,OAAO,OAAO,GAAG,SAAS,OAAO,CAAC,aAAa;QACjD;QAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;QAClC,QAAQ,GAAG,CAAC;QACZ,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,MAAM;IACR;AACF;uCAEe"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/OneDrive/Documents/Travel-App/models/User.js"],"sourcesContent":["import mongoose from 'mongoose';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  fullName: {\r\n    type: String,\r\n    required: [true, 'Please provide your full name'],\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: [true, 'Please provide your email'],\r\n    unique: true,\r\n    lowercase: true,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: [true, 'Please provide a password'],\r\n    minlength: 6,\r\n    select: false,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\n// Hash password before saving\r\nuserSchema.pre('save', async function(next) {\r\n  if (!this.isModified('password')) return next();\r\n  this.password = await bcrypt.hash(this.password, 12);\r\n  next();\r\n});\r\n\r\n// Compare password method\r\nuserSchema.methods.comparePassword = async function(candidatePassword) {\r\n  return await bcrypt.compare(candidatePassword, this.password);\r\n};\r\n\r\nexport default mongoose.models.User || mongoose.model('User', userSchema);"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAgC;IACnD;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,QAAQ;QACR,WAAW;IACb;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,WAAW;QACX,QAAQ;IACV;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;AAEA,8BAA8B;AAC9B,WAAW,GAAG,CAAC,QAAQ,eAAe,IAAI;IACxC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,OAAO;IACzC,IAAI,CAAC,QAAQ,GAAG,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;IACjD;AACF;AAEA,0BAA0B;AAC1B,WAAW,OAAO,CAAC,eAAe,GAAG,eAAe,iBAAiB;IACnE,OAAO,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,mBAAmB,IAAI,CAAC,QAAQ;AAC9D;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/OneDrive/Documents/Travel-App/app/api/auth/signup/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport connectDB from '@/lib/db';\r\nimport User from '@/models/User';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    // Add console.log to help us debug\r\n    console.log('Starting signup process...');\r\n    \r\n    // Connect to database\r\n    await connectDB();\r\n    console.log('Connected to MongoDB successfully');\r\n    \r\n    const { fullName, email, password } = await request.json();\r\n    console.log('Received user data:', { fullName, email });\r\n\r\n    // Check if user already exists\r\n    const existingUser = await User.findOne({ email });\r\n    if (existingUser) {\r\n      console.log('User already exists with email:', email);\r\n      return NextResponse.json(\r\n        { error: 'Email already registered' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Create new user\r\n    const user = await User.create({\r\n      fullName,\r\n      email,\r\n      password,\r\n    });\r\n    console.log('User created successfully:', user._id);\r\n\r\n    // Generate JWT token\r\n    const token = jwt.sign(\r\n      { userId: user._id },\r\n      process.env.JWT_SECRET || 'your-secret-key',\r\n      { expiresIn: '7d' }\r\n    );\r\n\r\n    // Set HTTP-only cookie\r\n    const response = NextResponse.json(\r\n      { message: 'User created successfully' },\r\n      { status: 201 }\r\n    );\r\n\r\n    response.cookies.set('token', token, {\r\n      httpOnly: true,\r\n      secure: process.env.NODE_ENV === 'production',\r\n      sameSite: 'strict',\r\n      maxAge: 60 * 60 * 24 * 7, // 7 days\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    // Add detailed error logging\r\n    console.error('Signup error:', error);\r\n    return NextResponse.json(\r\n      { error: error.message || 'Internal server error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,mCAAmC;QACnC,QAAQ,GAAG,CAAC;QAEZ,sBAAsB;QACtB,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAS,AAAD;QACd,QAAQ,GAAG,CAAC;QAEZ,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QACxD,QAAQ,GAAG,CAAC,uBAAuB;YAAE;YAAU;QAAM;QAErD,+BAA+B;QAC/B,MAAM,eAAe,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,QAAQ,GAAG,CAAC,mCAAmC;YAC/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA2B,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,kBAAkB;QAClB,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;YAC7B;YACA;YACA;QACF;QACA,QAAQ,GAAG,CAAC,8BAA8B,KAAK,GAAG;QAElD,qBAAqB;QACrB,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CACpB;YAAE,QAAQ,KAAK,GAAG;QAAC,GACnB,QAAQ,GAAG,CAAC,UAAU,IAAI,mBAC1B;YAAE,WAAW;QAAK;QAGpB,uBAAuB;QACvB,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAChC;YAAE,SAAS;QAA4B,GACvC;YAAE,QAAQ;QAAI;QAGhB,SAAS,OAAO,CAAC,GAAG,CAAC,SAAS,OAAO;YACnC,UAAU;YACV,QAAQ,oDAAyB;YACjC,UAAU;YACV,QAAQ,KAAK,KAAK,KAAK;QACzB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,6BAA6B;QAC7B,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,MAAM,OAAO,IAAI;QAAwB,GAClD;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}