{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/OneDrive/Documents/travel-app-2/models/User.js"],"sourcesContent":["import mongoose from 'mongoose';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  fullName: {\r\n    type: String,\r\n    required: [true, 'Please provide your full name'],\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: [true, 'Please provide your email'],\r\n    unique: true,\r\n    lowercase: true,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: [true, 'Please provide a password'],\r\n    minlength: 6,\r\n    select: false,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\n// Hash password before saving\r\nuserSchema.pre('save', async function(next) {\r\n  if (!this.isModified('password')) return next();\r\n  this.password = await bcrypt.hash(this.password, 12);\r\n  next();\r\n});\r\n\r\n// Compare password method\r\nuserSchema.methods.comparePassword = async function(candidatePassword) {\r\n  return await bcrypt.compare(candidatePassword, this.password);\r\n};\r\n\r\nexport default mongoose.models.User || mongoose.model('User', userSchema);"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA,MAAM,aAAa,IAAI,SAAS,MAAM,CAAC;IACrC,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAgC;IACnD;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,QAAQ;QACR,WAAW;IACb;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,WAAW;QACX,QAAQ;IACV;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;AAEA,8BAA8B;AAC9B,WAAW,GAAG,CAAC,QAAQ,eAAe,IAAI;IACxC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,OAAO;IACzC,IAAI,CAAC,QAAQ,GAAG,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;IACjD;AACF;AAEA,0BAA0B;AAC1B,WAAW,OAAO,CAAC,eAAe,GAAG,eAAe,iBAAiB;IACnE,OAAO,MAAM,OAAO,OAAO,CAAC,mBAAmB,IAAI,CAAC,QAAQ;AAC9D;uCAEe,SAAS,MAAM,CAAC,IAAI,IAAI,SAAS,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/OneDrive/Documents/travel-app-2/app/api/auth/signup/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport connectDB from '@/lib/db';\r\nimport User from '@/models/User';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    await connectDB();\r\n    \r\n    const { fullName, email, password } = await request.json();\r\n\r\n    // Check if user already exists\r\n    const existingUser = await User.findOne({ email });\r\n    if (existingUser) {\r\n      return NextResponse.json(\r\n        { error: 'Email already registered' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Create new user\r\n    const user = await User.create({\r\n      fullName,\r\n      email,\r\n      password,\r\n    });\r\n\r\n    // Generate JWT token\r\n    const token = jwt.sign(\r\n      { userId: user._id },\r\n      process.env.JWT_SECRET || 'your-secret-key',\r\n      { expiresIn: '7d' }\r\n    );\r\n\r\n    // Set HTTP-only cookie\r\n    const response = NextResponse.json(\r\n      { message: 'User created successfully' },\r\n      { status: 201 }\r\n    );\r\n\r\n    response.cookies.set('token', token, {\r\n      httpOnly: true,\r\n      secure: process.env.NODE_ENV === 'production',\r\n      sameSite: 'strict',\r\n      maxAge: 60 * 60 * 24 * 7, // 7 days\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: 'Internal server error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;;;;;;AAEA;;;;;;;;;;AAGO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM;QAEN,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAExD,+BAA+B;QAC/B,MAAM,eAAe,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA2B,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,kBAAkB;QAClB,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;YAC7B;YACA;YACA;QACF;QAEA,qBAAqB;QACrB,MAAM,QAAQ,IAAI,IAAI,CACpB;YAAE,QAAQ,KAAK,GAAG;QAAC,GACnB,QAAQ,GAAG,CAAC,UAAU,IAAI,mBAC1B;YAAE,WAAW;QAAK;QAGpB,uBAAuB;QACvB,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAChC;YAAE,SAAS;QAA4B,GACvC;YAAE,QAAQ;QAAI;QAGhB,SAAS,OAAO,CAAC,GAAG,CAAC,SAAS,OAAO;YACnC,UAAU;YACV,QAAQ,oDAAyB;YACjC,UAAU;YACV,QAAQ,KAAK,KAAK,KAAK;QACzB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}