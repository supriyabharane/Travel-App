{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/OneDrive/Documents/Travel-App/lib/db.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error('Please define the MONGODB_URI environment variable inside .env');\r\n}\r\n\r\nlet cached = global.mongoose;\r\n\r\nif (!cached) {\r\n  cached = global.mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function connectDB() {\r\n  try {\r\n    if (cached.conn) {\r\n      console.log('Using cached MongoDB connection');\r\n      return cached.conn;\r\n    }\r\n\r\n    console.log('Creating new MongoDB connection...');\r\n    \r\n    if (!cached.promise) {\r\n      const opts = {\r\n        bufferCommands: false,\r\n      };\r\n\r\n      cached.promise = mongoose.connect(MONGODB_URI, opts);\r\n    }\r\n    \r\n    cached.conn = await cached.promise;\r\n    console.log('Successfully connected to MongoDB!');\r\n    return cached.conn;\r\n  } catch (error) {\r\n    console.error('MongoDB connection error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI;QACF,IAAI,OAAO,IAAI,EAAE;YACf,QAAQ,GAAG,CAAC;YACZ,OAAO,OAAO,IAAI;QACpB;QAEA,QAAQ,GAAG,CAAC;QAEZ,IAAI,CAAC,OAAO,OAAO,EAAE;YACnB,MAAM,OAAO;gBACX,gBAAgB;YAClB;YAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;QACjD;QAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;QAClC,QAAQ,GAAG,CAAC;QACZ,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF;uCAEe"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/OneDrive/Documents/Travel-App/models/Trip.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst tripSchema = new mongoose.Schema({\r\n  title: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  description: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  destinationType: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  destinationCountry: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  destinationSeason: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  duration: {\r\n    days: Number,\r\n    nights: Number\r\n  },\r\n  images: [{\r\n    url: String,\r\n    alt: String\r\n  }],\r\n  itinerary: [{\r\n    dayNumber: Number,\r\n    overview: String,\r\n    schedule: {\r\n      morning: String,\r\n      afternoon: String,\r\n      evening: String\r\n    }\r\n  }],\r\n  stays: [{\r\n    name: String,\r\n    hotelType: String,\r\n    nights: Number,\r\n    images: [String],\r\n    amenities: [String]\r\n  }],\r\n  transfers: [{\r\n    title: String,\r\n    date: String,\r\n    vehicleType: String,\r\n    image: String,\r\n    amenities: [String],\r\n    features: [String]\r\n  }],\r\n  pricing: {\r\n    valuePack: Number,\r\n    elitePack: Number,\r\n    businessPack: Number,\r\n    termsAndConditions: String,\r\n    refundPolicy: String\r\n  },\r\n  reviews: [{\r\n    name: String,\r\n    rating: Number,\r\n    comment: String,\r\n    date: Date\r\n  }],\r\n  termsAndConditions: String,\r\n  status: {\r\n    type: String,\r\n    enum: ['draft', 'active'],\r\n    default: 'active'\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n  updatedAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  }\r\n});\r\n\r\nconst Trip = mongoose.models.Trip || mongoose.model('Trip', tripSchema, 'trips');\r\n\r\nexport default Trip;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QACL,MAAM;QACN,UAAU;IACZ;IACA,aAAa;QACX,MAAM;QACN,UAAU;IACZ;IACA,iBAAiB;QACf,MAAM;QACN,UAAU;IACZ;IACA,oBAAoB;QAClB,MAAM;QACN,UAAU;IACZ;IACA,mBAAmB;QACjB,MAAM;QACN,UAAU;IACZ;IACA,UAAU;QACR,MAAM;QACN,QAAQ;IACV;IACA,QAAQ;QAAC;YACP,KAAK;YACL,KAAK;QACP;KAAE;IACF,WAAW;QAAC;YACV,WAAW;YACX,UAAU;YACV,UAAU;gBACR,SAAS;gBACT,WAAW;gBACX,SAAS;YACX;QACF;KAAE;IACF,OAAO;QAAC;YACN,MAAM;YACN,WAAW;YACX,QAAQ;YACR,QAAQ;gBAAC;aAAO;YAChB,WAAW;gBAAC;aAAO;QACrB;KAAE;IACF,WAAW;QAAC;YACV,OAAO;YACP,MAAM;YACN,aAAa;YACb,OAAO;YACP,WAAW;gBAAC;aAAO;YACnB,UAAU;gBAAC;aAAO;QACpB;KAAE;IACF,SAAS;QACP,WAAW;QACX,WAAW;QACX,cAAc;QACd,oBAAoB;QACpB,cAAc;IAChB;IACA,SAAS;QAAC;YACR,MAAM;YACN,QAAQ;YACR,SAAS;YACT,MAAM;QACR;KAAE;IACF,oBAAoB;IACpB,QAAQ;QACN,MAAM;QACN,MAAM;YAAC;YAAS;SAAS;QACzB,SAAS;IACX;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;AAEA,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ,YAAY;uCAEzD"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/OneDrive/Documents/Travel-App/app/api/specialty-tours/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport connectDB from '@/lib/db';\r\nimport Trip from '@/models/Trip';\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDB();\r\n    const specialtyTours = await Trip.find({ type: 'specialty' }).sort({ createdAt: -1 });\r\n    return NextResponse.json({ trips: specialtyTours });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: error.message }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAS,AAAD;QACd,MAAM,iBAAiB,MAAM,gHAAA,CAAA,UAAI,CAAC,IAAI,CAAC;YAAE,MAAM;QAAY,GAAG,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE;QACnF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe;IACnD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}