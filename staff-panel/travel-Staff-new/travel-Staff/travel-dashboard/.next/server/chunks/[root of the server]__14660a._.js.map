{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/Downloads/travel-dashboard/lib/mongodb.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = 'mongodb+srv://dhanushkumarb:dhanushkumarb@mydatabase.g538d.mongodb.net/?retryWrites=true&w=majority&appName=mydatabase';\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error('Please define the MONGODB_URI environment variable inside .env');\r\n}\r\n\r\nlet cached = global.mongoose;\r\n\r\nif (!cached) {\r\n  cached = global.mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function connectDB() {\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    const opts = {\r\n      bufferCommands: false,\r\n    };\r\n\r\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\r\n      return mongoose;\r\n    });\r\n  }\r\n\r\n  try {\r\n    cached.conn = await cached.promise;\r\n  } catch (e) {\r\n    cached.promise = null;\r\n    throw e;\r\n  }\r\n\r\n  return cached.conn;\r\n}\r\n\r\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AAEpB,uCAAkB;;AAElB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/Downloads/travel-dashboard/models/Trip.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst TripSchema = new mongoose.Schema({\r\n  title: {\r\n    type: String,\r\n    required: [true, 'Please provide a title'],\r\n    maxlength: [100, 'Title cannot be more than 100 characters']\r\n  },\r\n  description: {\r\n    type: String,\r\n    required: [true, 'Please provide a description']\r\n  },\r\n  destinationCountry: {\r\n    type: String,\r\n    required: [true, 'Please provide a destination country']\r\n  },\r\n  destinationType: {\r\n    type: String,\r\n    required: [true, 'Please provide a destination type']\r\n  },\r\n  destinationSeason: {\r\n    type: String,\r\n    required: [true, 'Please provide a destination season']\r\n  },\r\n  duration: {\r\n    type: Number,\r\n    required: [true, 'Please provide duration']\r\n  },\r\n  itinerary: [{\r\n    type: Object\r\n  }],\r\n  inclusions: [{\r\n    type: String\r\n  }],\r\n  price: {\r\n    adult: Number,\r\n    child: Number,\r\n    currency: {\r\n      type: String,\r\n      default: 'USD'\r\n    }\r\n  },\r\n  terms: String,\r\n  images: [{\r\n    type: String\r\n  }],\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  }\r\n});\r\n\r\nexport default mongoose.models.Trip || mongoose.model('Trip', TripSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAyB;QAC1C,WAAW;YAAC;YAAK;SAA2C;IAC9D;IACA,aAAa;QACX,MAAM;QACN,UAAU;YAAC;YAAM;SAA+B;IAClD;IACA,oBAAoB;QAClB,MAAM;QACN,UAAU;YAAC;YAAM;SAAuC;IAC1D;IACA,iBAAiB;QACf,MAAM;QACN,UAAU;YAAC;YAAM;SAAoC;IACvD;IACA,mBAAmB;QACjB,MAAM;QACN,UAAU;YAAC;YAAM;SAAsC;IACzD;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;IAC7C;IACA,WAAW;QAAC;YACV,MAAM;QACR;KAAE;IACF,YAAY;QAAC;YACX,MAAM;QACR;KAAE;IACF,OAAO;QACL,OAAO;QACP,OAAO;QACP,UAAU;YACR,MAAM;YACN,SAAS;QACX;IACF;IACA,OAAO;IACP,QAAQ;QAAC;YACP,MAAM;QACR;KAAE;IACF,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/Downloads/travel-dashboard/app/api/trips/%5Bid%5D/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport connectDB from '@/lib/mongodb';\r\nimport Trip from '@/models/Trip';\r\n\r\nexport async function GET(req, { params }) {\r\n  try {\r\n    await connectDB();\r\n    const { id } = params;\r\n    \r\n    const trip = await Trip.findById(id);\r\n    \r\n    if (!trip) {\r\n      return NextResponse.json({ \r\n        success: false, \r\n        error: 'Trip not found' \r\n      }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({ \r\n      success: true, \r\n      data: trip \r\n    });\r\n\r\n  } catch (error) {\r\n    return NextResponse.json({ \r\n      success: false, \r\n      error: error.message \r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function DELETE(req, { params }) {\r\n  try {\r\n    await connectDB();\r\n    const { id } = params;\r\n    \r\n    const deletedTrip = await Trip.findByIdAndDelete(id);\r\n    \r\n    if (!deletedTrip) {\r\n      return NextResponse.json({ \r\n        success: false, \r\n        error: 'Trip not found' \r\n      }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({ \r\n      success: true, \r\n      data: deletedTrip \r\n    });\r\n\r\n  } catch (error) {\r\n    return NextResponse.json({ \r\n      success: false, \r\n      error: error.message \r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function PUT(req, { params }) {\r\n  try {\r\n    await connectDB();\r\n    const { id } = params;\r\n    const updateData = await req.json();\r\n    \r\n    const updatedTrip = await Trip.findByIdAndUpdate(\r\n      id,\r\n      updateData,\r\n      { new: true, runValidators: true }\r\n    );\r\n    \r\n    if (!updatedTrip) {\r\n      return NextResponse.json({ \r\n        success: false, \r\n        error: 'Trip not found' \r\n      }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({ \r\n      success: true, \r\n      data: updatedTrip \r\n    });\r\n\r\n  } catch (error) {\r\n    return NextResponse.json({ \r\n      success: false, \r\n      error: error.message \r\n    }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,GAAG,EAAE,EAAE,MAAM,EAAE;IACvC,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;QACd,MAAM,EAAE,EAAE,EAAE,GAAG;QAEf,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,QAAQ,CAAC;QAEjC,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;QACR;IAEF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,MAAM,OAAO;QACtB,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF;AAEO,eAAe,OAAO,GAAG,EAAE,EAAE,MAAM,EAAE;IAC1C,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;QACd,MAAM,EAAE,EAAE,EAAE,GAAG;QAEf,MAAM,cAAc,MAAM,gHAAA,CAAA,UAAI,CAAC,iBAAiB,CAAC;QAEjD,IAAI,CAAC,aAAa;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;QACR;IAEF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,MAAM,OAAO;QACtB,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF;AAEO,eAAe,IAAI,GAAG,EAAE,EAAE,MAAM,EAAE;IACvC,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;QACd,MAAM,EAAE,EAAE,EAAE,GAAG;QACf,MAAM,aAAa,MAAM,IAAI,IAAI;QAEjC,MAAM,cAAc,MAAM,gHAAA,CAAA,UAAI,CAAC,iBAAiB,CAC9C,IACA,YACA;YAAE,KAAK;YAAM,eAAe;QAAK;QAGnC,IAAI,CAAC,aAAa;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;YACT,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;QACR;IAEF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,MAAM,OAAO;QACtB,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}