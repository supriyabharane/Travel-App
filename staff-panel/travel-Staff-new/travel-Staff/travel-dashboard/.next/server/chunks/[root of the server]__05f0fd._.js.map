{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/akshi/Downloads/travel-Staff/travel-dashboard/lib/mongodb.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = 'mongodb+srv://dhanushkumarb:dhanushkumarb@mydatabase.g538d.mongodb.net/test?retryWrites=true&w=majority&appName=mydatabase';\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error('Please define the MONGODB_URI environment variable inside .env');\r\n}\r\n\r\nlet cached = global.mongoose;\r\n\r\nif (!cached) {\r\n  cached = global.mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function connectDB() {\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    const opts = {\r\n      bufferCommands: false,\r\n    };\r\n\r\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\r\n      return mongoose;\r\n    });\r\n  }\r\n\r\n  try {\r\n    cached.conn = await cached.promise;\r\n  } catch (e) {\r\n    cached.promise = null;\r\n    throw e;\r\n  }\r\n\r\n  return cached.conn;\r\n}\r\n\r\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AAEpB,uCAAkB;;AAElB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/akshi/Downloads/travel-Staff/travel-dashboard/models/Blog.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst BlogSchema = new mongoose.Schema({\r\n  title: {\r\n    type: String,\r\n    required: [true, 'Please provide a title'],\r\n    maxlength: [200, 'Title cannot be more than 200 characters']\r\n  },\r\n  content: {\r\n    type: String,\r\n    required: [true, 'Please provide content']\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n  updatedAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  }\r\n});\r\n\r\nexport default mongoose.models.Blog || mongoose.model('Blog', BlogSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAyB;QAC1C,WAAW;YAAC;YAAK;SAA2C;IAC9D;IACA,SAAS;QACP,MAAM;QACN,UAAU;YAAC;YAAM;SAAyB;IAC5C;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/akshi/Downloads/travel-Staff/travel-dashboard/app/api/blogs/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport connectDB from '@/lib/mongodb';\r\nimport Blog from '@/models/Blog';\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDB();\r\n    const blogs = await Blog.find({}).sort({ createdAt: -1 });\r\n    return NextResponse.json({ blogs });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: error.message }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    const body = await request.json();\r\n    await connectDB();\r\n    const blog = await Blog.create(body);\r\n    return NextResponse.json({ blog });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: error.message }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;QACd,MAAM,QAAQ,MAAM,gHAAA,CAAA,UAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE;QACvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAM;IACnC,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;QACd,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAK;IAClC,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}