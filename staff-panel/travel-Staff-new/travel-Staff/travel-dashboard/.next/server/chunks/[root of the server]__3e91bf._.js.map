{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/Downloads/travel-Staff-new/travel-Staff/travel-dashboard/lib/mongodb.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = 'mongodb+srv://dhanushkumarb:dhanushkumarb@mydatabase.g538d.mongodb.net/test?retryWrites=true&w=majority&appName=mydatabase';\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error('Please define the MONGODB_URI environment variable inside .env');\r\n}\r\n\r\nlet cached = global.mongoose;\r\n\r\nif (!cached) {\r\n  cached = global.mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function connectDB() {\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    const opts = {\r\n      bufferCommands: false,\r\n    };\r\n\r\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\r\n      return mongoose;\r\n    });\r\n  }\r\n\r\n  try {\r\n    cached.conn = await cached.promise;\r\n  } catch (e) {\r\n    cached.promise = null;\r\n    throw e;\r\n  }\r\n\r\n  return cached.conn;\r\n}\r\n\r\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AAEpB,uCAAkB;;AAElB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/Downloads/travel-Staff-new/travel-Staff/travel-dashboard/models/Trip.js"],"sourcesContent":["// models/Trip.js\r\nimport mongoose from 'mongoose';\r\n\r\nconst tripSchema = new mongoose.Schema({\r\n  // Basic Info\r\n  title: { type: String, required: true },\r\n  description: { type: String, required: true },\r\n  destinationType: { type: String, required: true },\r\n  destinationCountry: { type: String, required: true },\r\n  destinationSeason: { type: String, required: true },\r\n  duration: {\r\n    days: { type: Number, required: true },\r\n    nights: { type: Number, required: true }\r\n  },\r\n  \r\n  // Media\r\n  images: [{ type: String }], // Changed to simple string array for URLs\r\n\r\n  // Itinerary Details\r\n  itinerary: [{\r\n    dayNumber: { type: String, required: true },\r\n    highlight: { type: String, required: true },\r\n    descriptions: [{\r\n      text: { type: String, required: true },\r\n      image: { type: String } // Optional image URL\r\n    }]\r\n  }],\r\n\r\n  // Stays\r\n  stays: [{\r\n    location: { type: String, required: true },\r\n    duration: { type: String, required: true },\r\n    hotels: [{\r\n      name: { type: String, required: true },\r\n      type: { type: String, required: true },\r\n      features: [String],\r\n      images: [String] // Array of image URLs\r\n    }]\r\n  }],\r\n\r\n  // Pricing\r\n  pricing: [{\r\n    title: { type: String, required: true },\r\n    startingPrice: { type: Number, required: true },\r\n    currency: { type: String, default: 'INR' },\r\n    benefits: [String]\r\n  }],\r\n\r\n  // Features/Highlights\r\n  features: [{\r\n    title: { type: String, required: true },\r\n    description: { type: String, required: true },\r\n    color: { type: String },\r\n    secondColor: { type: String }\r\n  }],\r\n\r\n  // Support Info\r\n  support: {\r\n    phone: { type: String },\r\n    email: { type: String }\r\n  },\r\n\r\n  // Metadata\r\n  status: {\r\n    type: String,\r\n    enum: ['draft', 'published', 'archived'],\r\n    default: 'draft'\r\n  }\r\n}, {\r\n  timestamps: true\r\n});\r\n\r\nconst Trip = mongoose.models.Trip || mongoose.model('Trip', tripSchema);\r\n\r\nexport default Trip;\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACjB;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,aAAa;IACb,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,aAAa;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC5C,iBAAiB;QAAE,MAAM;QAAQ,UAAU;IAAK;IAChD,oBAAoB;QAAE,MAAM;QAAQ,UAAU;IAAK;IACnD,mBAAmB;QAAE,MAAM;QAAQ,UAAU;IAAK;IAClD,UAAU;QACR,MAAM;YAAE,MAAM;YAAQ,UAAU;QAAK;QACrC,QAAQ;YAAE,MAAM;YAAQ,UAAU;QAAK;IACzC;IAEA,QAAQ;IACR,QAAQ;QAAC;YAAE,MAAM;QAAO;KAAE;IAE1B,oBAAoB;IACpB,WAAW;QAAC;YACV,WAAW;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YAC1C,WAAW;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YAC1C,cAAc;gBAAC;oBACb,MAAM;wBAAE,MAAM;wBAAQ,UAAU;oBAAK;oBACrC,OAAO;wBAAE,MAAM;oBAAO,EAAE,qBAAqB;gBAC/C;aAAE;QACJ;KAAE;IAEF,QAAQ;IACR,OAAO;QAAC;YACN,UAAU;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YACzC,UAAU;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YACzC,QAAQ;gBAAC;oBACP,MAAM;wBAAE,MAAM;wBAAQ,UAAU;oBAAK;oBACrC,MAAM;wBAAE,MAAM;wBAAQ,UAAU;oBAAK;oBACrC,UAAU;wBAAC;qBAAO;oBAClB,QAAQ;wBAAC;qBAAO,CAAC,sBAAsB;gBACzC;aAAE;QACJ;KAAE;IAEF,UAAU;IACV,SAAS;QAAC;YACR,OAAO;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YACtC,eAAe;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YAC9C,UAAU;gBAAE,MAAM;gBAAQ,SAAS;YAAM;YACzC,UAAU;gBAAC;aAAO;QACpB;KAAE;IAEF,sBAAsB;IACtB,UAAU;QAAC;YACT,OAAO;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YACtC,aAAa;gBAAE,MAAM;gBAAQ,UAAU;YAAK;YAC5C,OAAO;gBAAE,MAAM;YAAO;YACtB,aAAa;gBAAE,MAAM;YAAO;QAC9B;KAAE;IAEF,eAAe;IACf,SAAS;QACP,OAAO;YAAE,MAAM;QAAO;QACtB,OAAO;YAAE,MAAM;QAAO;IACxB;IAEA,WAAW;IACX,QAAQ;QACN,MAAM;QACN,MAAM;YAAC;YAAS;YAAa;SAAW;QACxC,SAAS;IACX;AACF,GAAG;IACD,YAAY;AACd;AAEA,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ;uCAE7C"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/Downloads/travel-Staff-new/travel-Staff/travel-dashboard/app/api/trips/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport connectDB from '@/lib/mongodb';\r\nimport Trip from '@/models/Trip';\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDB();\r\n    \r\n    const trips = await Trip.find({}).sort({ createdAt: -1 });\r\n    \r\n    return NextResponse.json({ \r\n      success: true, \r\n      data: trips \r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching trips:', error);\r\n    return NextResponse.json({ \r\n      success: false, \r\n      error: error.message || 'Failed to fetch trips' \r\n    }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;QAEd,MAAM,QAAQ,MAAM,gHAAA,CAAA,UAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE;QAEvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;QACR;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,MAAM,OAAO,IAAI;QAC1B,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}