{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/Downloads/travel-dashboard/models/Trip.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst tripSchema = new mongoose.Schema({\r\n  title: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  description: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  destinationCountry: {\r\n    type: String,\r\n    required: true,\r\n    enum: ['India', 'America', 'Europe', 'Australia', 'Japan', 'Thailand', 'Singapore', 'Malaysia']\r\n  },\r\n  destinationType: {\r\n    type: String,\r\n    required: true,\r\n    enum: ['Beach', 'Mountain', 'Desert', 'City', 'Wildlife', 'Cultural']\r\n  },\r\n  destinationSeason: {\r\n    type: String,\r\n    required: true,\r\n    enum: ['Summer', 'Winter', 'Spring', 'Autumn', 'All Year']\r\n  },\r\n  duration: {\r\n    type: Number,\r\n    required: true,\r\n  },\r\n  itinerary: [{\r\n    day: Number,\r\n    activities: [String]\r\n  }],\r\n  inclusions: [String],\r\n  exclusions: [String],\r\n  price: {\r\n    adult: Number,\r\n    child: Number,\r\n    currency: {\r\n      type: String,\r\n      default: 'USD'\r\n    }\r\n  },\r\n  terms: String,\r\n  images: [String],\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n  updatedAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  }\r\n});\r\n\r\nexport default mongoose.models.Trip || mongoose.model('Trip', tripSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QACL,MAAM;QACN,UAAU;IACZ;IACA,aAAa;QACX,MAAM;QACN,UAAU;IACZ;IACA,oBAAoB;QAClB,MAAM;QACN,UAAU;QACV,MAAM;YAAC;YAAS;YAAW;YAAU;YAAa;YAAS;YAAY;YAAa;SAAW;IACjG;IACA,iBAAiB;QACf,MAAM;QACN,UAAU;QACV,MAAM;YAAC;YAAS;YAAY;YAAU;YAAQ;YAAY;SAAW;IACvE;IACA,mBAAmB;QACjB,MAAM;QACN,UAAU;QACV,MAAM;YAAC;YAAU;YAAU;YAAU;YAAU;SAAW;IAC5D;IACA,UAAU;QACR,MAAM;QACN,UAAU;IACZ;IACA,WAAW;QAAC;YACV,KAAK;YACL,YAAY;gBAAC;aAAO;QACtB;KAAE;IACF,YAAY;QAAC;KAAO;IACpB,YAAY;QAAC;KAAO;IACpB,OAAO;QACL,OAAO;QACP,OAAO;QACP,UAAU;YACR,MAAM;YACN,SAAS;QACX;IACF;IACA,OAAO;IACP,QAAQ;QAAC;KAAO;IAChB,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;IACA,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dhanush/Downloads/travel-dashboard/app/api/trips/create/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport dbConnect from '@lib/dbconnect.js';\r\nimport Trip from '@/models/Trip';\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    await dbConnect();\r\n    \r\n    const data = await request.json();\r\n    \r\n    const trip = new Trip(data);\r\n    await trip.save();\r\n\r\n    return NextResponse.json({ success: true, data: trip }, { status: 201 });\r\n  } catch (error) {\r\n    console.error('Error creating trip:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: error.message }, \r\n      { status: 400 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;;;;;;AAEA;;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM;QAEN,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,OAAO,IAAI,gHAAA,CAAA,UAAI,CAAC;QACtB,MAAM,KAAK,IAAI;QAEf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAK,GAAG;YAAE,QAAQ;QAAI;IACxE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}